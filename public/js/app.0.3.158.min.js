/*! Bitflop 0.3.158 2014-01-03 */
var app=angular.module("app",["uiSlider","ui.bootstrap"]);app.factory("socket",function($rootScope){var socket=io.connect(GLOBAL.URL,{reconnect:!0,"reconnection delay":500,"max reconnection attempts":10,"sync disconnect on unload":!0});return{on:function(eventName,callback){socket.on(eventName,function(){var args=arguments;$rootScope.$apply(function(){callback.apply(socket,args)})})},emit:function(eventName,data,callback){socket.emit(eventName,data,function(){var args=arguments;$rootScope.$apply(function(){callback&&callback.apply(socket,args)})})},send:function(eventName,data,callback){socket.send(eventName,data,function(){var args=arguments;$rootScope.$apply(function(){callback&&callback.apply(socket,args)})})},destroy:function(){socket.removeAllListeners()}}}),app.directive("collapse",[function(){return{link:function(scope,element,attrs){var isCollapsed;scope.$watch(attrs.collapse,function(value){value?collapse():expand()});var expand=function(){element.addClass("in"),isCollapsed=!1},collapse=function(){isCollapsed=!0,element.removeClass("in")}}}}]),app.filter("reverse",function(){return function(items){return items.slice().reverse()}}),app.directive("scrollGlue",function(){return{priority:1,require:"?ngModel",restrict:"A",link:function(scope,element,attrs,ngModel){ngModel&&scope.$watch(function(){ngModel.$viewValue&&(element[0].scrollTop=element[0].scrollHeight+1e3)})}}}),app.directive("localVideo",["socket",function(socket){return{priority:1,restrict:"A",link:function(scope,element){if(scope.peer.local.element=element[0],null!==getUserMedia){var localVideo=element[0];localVideo&&(element.removeAttr("controls"),getUserMedia({video:!0,audio:!0},function(stream){scope.peer.local.stream=stream,null!==RTCPeerConnection&&scope.peer.connection.addStream(stream),localVideo.src=URL.createObjectURL(stream),localVideo.play(),scope.media.available=!0,scope.media.video=!0,scope.media.audio=!0,scope.$apply(),null!==RTCPeerConnection&&socket.emit("peer:ready",{room:GLOBAL.ROOM})},function(){alert("There was an error connecting your webcam. Make sure it is not being used by any other applications.")}))}}}}]),app.directive("remoteVideo",["socket",function(){return{priority:1,restrict:"A",link:function(scope,element){if(scope.peer.remote.element=element[0],null!==getUserMedia){var remoteVideo=element[0];remoteVideo&&element.removeAttr("controls"),scope.$watch("game.opponent.name",function(name){name||scope.peer.remote.stream&&(element.attr("src","/img/webcam.png"),scope.peer.connection&&scope.peer.connection.removeStream&&scope.peer.connection.removeStream(scope.peer.remote.stream),scope.peer.remote.stream.stop&&scope.peer.remote.stream.stop())})}}}}]),app.directive("sendChatMsg",["socket",function(socket){return function(scope,element){element.bind("keydown keypress",function(event){13===event.which&&(scope.$apply(function(){(""!==scope.chat.msg.trim()||null!==scope.chat.msg)&&(socket.emit("chat:msg",{room:GLOBAL.ROOM,msg:scope.chat.msg}),scope.chat.msg=null)}),event.preventDefault())})}}]),app.directive("betAmount",[function(){return{restrict:"A",require:"ngModel",link:function(scope,elem,attrs){scope.$watch(attrs.ngModel,function(amount){amount=parseInt(amount,10);var type=attrs.name.toUpperCase(),nan=isNaN(amount);nan||amount>=scope.game.player.options[type].min&&amount<=scope.game.player.options[type].max&&(scope.game.player.options[type].amount=amount)})}}}]),app.controller("GameOverCtrl",function($rootScope,$scope,$http,$timeout,$modalInstance){$scope.ok=function(){$modalInstance.close("ok")}}),app.controller("InvitePlayerCtrl",function($rootScope,$scope,$http,$timeout,$modalInstance){$scope.ok=function(){$modalInstance.close("ok")},$scope.cancel=function(){$modalInstance.dismiss("cancel")},$scope.share=function(id){var text="Anyone%20up%20to%20play%20some%20webcam%20poker%3F%20via%20%40bitflopme",url="https%3A%2F%2Fbitflop.me%2Fgame%2Fplay%2F"+id,opts="status=1,width=575,height=375,toolbar=no,location=no,status=no,menubar=no,scrollbars=no,resizeable=yes,top="+Math.floor((window.innerHeight-400)/2)+",left="+Math.floor((window.innerWidth-575)/2);return window.open("https://twitter.com/share?text="+text+"&url="+url,"Share",opts),!1}}),app.controller("GameCtrl",function($rootScope,$scope,$http,$timeout,$modal,socket){function waitUntilRemoteStreamStartsFlowing(){console.log("readyState"+$scope.peer.remote.element.readyState),console.log("HAVE_CURRENT_DATA"+HTMLMediaElement.HAVE_CURRENT_DATA),console.log("paused"+$scope.peer.remote.element.paused),console.log("currenttime"+$scope.peer.remote.element.currentTime),($scope.peer.remote.element.readyState<=HTMLMediaElement.HAVE_CURRENT_DATA||$scope.peer.remote.element.paused||$scope.peer.remote.element.currentTime<=0)&&setTimeout(waitUntilRemoteStreamStartsFlowing,200)}function createAnswer(){console.log("5. creating answer to be sent"),$scope.peer.connection.createAnswer(function(desc){$scope.peer.connection.setLocalDescription(desc),socket.emit("peer:send_answer",{room:GLOBAL.ROOM,sdp:desc}),console.log("6. answer has been sent to other player"),console.log("7. add ice candidates")})}function onIceCandidate(event){event.candidate&&(console.log("ice candidate created and sent out"),socket.emit("peer:send_candidate",{room:GLOBAL.ROOM,candidate:event.candidate}))}function onAddStream(event){event&&$scope.peer.remote.element&&(console.log("10. onAddStream has been called"),$scope.peer.remote.stream=event.stream,$scope.peer.remote.element.src=URL.createObjectURL(event.stream),$scope.peer.remote.element.play(),waitUntilRemoteStreamStartsFlowing())}if($scope.isCollapsed=!0,null!==RTCPeerConnection){var pc=new RTCPeerConnection({iceServers:[{url:"stun:stun.l.google.com:19302"}],optional:{DtlsSrtpKeyAgreement:!0}});pc.onicecandidate=onIceCandidate,pc.onaddstream=onAddStream}var playerOptions={BET:{allowed:!1,min:0,max:0,amount:0},RAISE:{allowed:!1,min:0,max:0,amount:0},CALL:{allowed:!1,amount:0},FOLD:{allowed:!1}};$scope.initPeerConnection=function(){console.log("1. init peer connection"),null!==RTCPeerConnection&&$scope.peer.connection.createOffer(function(desc){console.log("2. local description has been set"),$scope.peer.connection.setLocalDescription(desc),socket.emit("peer:send_offer",{room:GLOBAL.ROOM,sdp:desc})},null,{mandatory:{OfferToReceiveAudio:!0,OfferToReceiveVideo:!0}})},$scope.chat={msg:null},$scope.media={available:!1,audio:!1,video:!0},$scope.peer={connection:pc||null,candidates:[],local:{},remote:{},connected:!1},$scope.room={id:-1,players:[],observers:[]},$scope.game={ready:!1,player:{id:-1,name:null,chips:null,cards:[],folded:null,options:playerOptions},opponent:{id:-1,name:null,chips:null,folded:null,cards:[]},events:[],action:{board:["01","01","01","01","01"],state:null}},$scope.fn={msToDateTime:function(ms){var date=new Date(ms);return date.toLocaleString()},parseAmount:function(amount){return null===amount||"undefined"==typeof amount?0:parseInt(amount,10)},toggleVideoStream:function(){$scope.peer.local.stream&&($scope.media.video?($scope.peer.local.stream.getVideoTracks()[0].enabled=!1,$scope.media.video=!1):($scope.peer.local.stream.getVideoTracks()[0].enabled=!0,$scope.media.video=!0))},toggleAudioStream:function(){$scope.peer.local.stream&&($scope.media.audio?($scope.peer.local.stream.getAudioTracks()[0].enabled=!1,$scope.media.audio=!1):($scope.peer.local.stream.getAudioTracks()[0].enabled=!0,$scope.media.audio=!0))}},$scope.betOption=function(name,option){$scope.game.player.options[name].amount;var bet,min=$scope.game.player.options[name].min,max=$scope.game.player.options[name].max;switch(option){case"double":bet=2*min;break;case"triple":bet=3*min;break;case"allin":bet=max}$scope.game.player.options[name].amount=max>=bet?bet:max},$scope.invitePlayer=function(link){var modalInstance=$modal.open({template:'<div class="modal-header"><h3>Invite a Player</h3></div><div class="modal-body"><p>Send the link below to the other player you wish to play against. They can copy and paste it into their browser window to join you!</p><p><strong>https://bitflop.me/game/play/'+link+'</strong></p><p>You can also send out a tweet using the link below to invite another player!</p><p><span class="share-link"><i class="fa fa-twitter" ng-click="share('+link+')"></i></span></p></div><div class="modal-footer"><button class="btn btn-primary" ng-click="ok()">OK</button></div>',controller:"InvitePlayerCtrl"});modalInstance.result.then(function(selectedItem){console.log(selectedItem)},function(){console.log(selectedItem)})},$scope.action=function(name){var action={};switch(action.name=name,$scope.game.action.turn=null,$scope.game.options=playerOptions,action.name){case"BET":action.amount=parseInt($scope.game.player.options.BET.amount,10);break;case"RAISE":action.amount=parseInt($scope.game.player.options.RAISE.amount,10);break;case"FOLD":if($scope.game.player.options.CHECK.allowed){var fold=confirm("Are you sure you want to fold? Checking is free!");fold?$scope.game.player.folded=!0:action.name="CHECK"}else $scope.game.player.folded=!0}socket.emit("player:action",{room:GLOBAL.ROOM,action:action})},socket.on("connect",function(){socket.emit("join",{room:GLOBAL.ROOM})}),socket.on("disconnect",function(){socket.emit("disconnect",{})}),socket.on("game:join",function(data){$scope.game.events=data.events,$scope.room.players=data.room.players,$scope.room.observers=data.room.observers,null!==data.player.id&&($scope.game.ready=data.start,-1===$scope.game.player.id&&($scope.game.player.id=data.player.id,$scope.game.player.name=data.user.name))});var updateBoard=function(cards){for(var i=0;4>=i;i+=1)cards[i]||(cards[i]="01");$scope.game.action.board=cards};socket.on("game:data",function(data){if(data.events&&($scope.game.events=data.events),data.action&&($scope.game.action=data.action,updateBoard($scope.game.action.board),"END"===$scope.game.action.state)){if(!$scope.game.action.winner)return;var modalInstance=$modal.open({template:'<div class="modal-header"><h3>Game Over</h3></div><div class="modal-body"><strong>'+$scope.game.action.winner+'</strong> wins!!!</div><div class="modal-footer"><button class="btn btn-primary" ng-click="ok()">OK</button></div>',controller:"GameOverCtrl"});modalInstance.result.then(function(selectedItem){console.log(selectedItem)},function(){console.log(selectedItem)})}data.player&&($scope.game.player=data.player),data.opponent&&($scope.game.opponent=data.opponent)}),socket.on("game:end",function(data){$scope.game.action=data.action,updateBoard($scope.game.action.board),$scope.game.player=data.player,$scope.game.opponent=data.opponent}),socket.on("game:leave",function(data){$scope.game.events=data.events,$scope.game.history=data.history,$scope.room.players=data.room.players,$scope.room.observers=data.room.observers,data.action&&($scope.game.action=data.action,updateBoard($scope.game.action.board)),data.player&&($scope.game.player=data.player),data.opponent&&($scope.game.opponent=data.opponent)}),socket.on("game:disconnect",function(){window.location.reload()}),socket.on("peer:init",function(){null!==RTCPeerConnection&&$scope.initPeerConnection()}),socket.on("peer:receive_candidate",function(data){null!==RTCPeerConnection&&(console.log("pushed ice candidate"),$scope.peer.connection.addIceCandidate(new RTCIceCandidate(data.candidate)))}),socket.on("peer:receive_offer",function(data){console.log("3. offer has been received"),null!==RTCPeerConnection&&($scope.peer.connection.setRemoteDescription(new RTCSessionDescription(data.sdp)),createAnswer())}),socket.on("peer:receive_answer",function(data){null!==RTCPeerConnection&&($scope.peer.connection.setRemoteDescription(new RTCSessionDescription(data.sdp)),console.log("8. received answer!"),console.log("9. addIceCandidates"))}),$scope.$on("$destroy",function(){socket.destroy()})}),app.directive("dropdownToggle",["$document",function($document){var openElement=null,closeMenu=angular.noop;return{restrict:"CA",link:function(scope,element){element.parent().bind("click",function(){closeMenu()}),element.bind("click",function(event){var elementWasOpen=element===openElement;event.preventDefault(),event.stopPropagation(),openElement&&closeMenu(),elementWasOpen||(element.parent().addClass("open"),openElement=element,closeMenu=function(event){event&&(event.preventDefault(),event.stopPropagation()),$document.unbind("click",closeMenu),element.parent().removeClass("open"),closeMenu=angular.noop,openElement=null},$document.bind("click",closeMenu))})}}}]);